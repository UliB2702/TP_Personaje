{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Petstore - OpenAPI 3.0",
    "description": "Este es un API de Peliculas/Series y Personajes los cuales estan asociados entre si",
    "contact": {
      "email": "ulibaamonde@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "tags": [
    {
      "name": "characters",
      "description": "Todo acerca de los personajes de la api",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://localhost:5000/characters"
      }
    },
    {
      "name": "movies",
      "description": "Todo acerca de las peliculas de la api",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://localhost:5000/movies"
      }
    }
  ],
  "paths": {
    "/characters/auth/login": {
      "get": {
        "tags": [
          "characters"
        ],
        "summary": "Obtencion del token",
        "description": "Te permite obtener el token necesario para realizar la autentificacion",
        "operationId": "getToken",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          }
        }
      }
    },
    "/characters": {
      "get": {
        "tags": [
          "characters"
        ],
        "summary": "Busqueda por parametros",
        "description": "Mediante este endpoint, podes conseguir el ID, Nombre y Imagen de un personaje de la Api con los siguientes parametros",
        "operationId": "getByParams",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "El nombre del personaje",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "age",
            "in": "query",
            "description": "La edad del personaje",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "movie",
            "in": "query",
            "description": "El edad de la pelicula relacionada al personaje",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          },
          "401": {
            "description": "No autorizado"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "characters"
        ],
        "summary": "Creacion de Personajes",
        "description": "Con este endpoint podes crear personajes para agregar a la Base de Datos",
        "operationId": "createCharacters",
        "requestBody": {
          "description": "Ingrese todos los necesario para crear el personaje",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Personaje"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Personaje"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Personaje"
              }
            },
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personaje"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personaje"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Ingreso de datos incorrecto"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "characters"
        ],
        "summary": "Actualizar Personaje",
        "description": "Con este endpoint se puede actualizar los datos de un personaje ya existente en la base de datos",
        "operationId": "updateCharacter",
        "requestBody": {
          "description": "Ingrese los datos necesarios para hacer el remplazo",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Personaje"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Personaje"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Personaje"
              }
            },
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Personaje Actualizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Personaje"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Personaje"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "characters"
        ],
        "summary": "Borrar Personaje",
        "description": "Con este endpoint podes borrar un personaje usando su ID",
        "operationId": "deleteByID",
        "responses": {
          "200": {
            "description": "Personaje borrado"
          },
          "400": {
            "description": "Id invalido"
          },
          "404": {
            "description": "Personaje no encontrado"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/characters/{id}": {
      "get": {
        "tags": [
          "characters"
        ],
        "summary": "Busqueda por ID",
        "description": "C",
        "operationId": "getByID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id usado para buscarlo",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personaje encontrado"
          },
          "400": {
            "description": "Id invalido"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/movies": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "Buscada por parametros",
        "description": "Este endpoint te permite buscar personajes mediante el nombre y luego te permite ordenarlos segun su fecha de creacion",
        "operationId": "getMoviesByParams",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "El nombre de la pelicula",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "El orden en que te gustaria ver las peliculas (ASC/DESC) en base a la fecha de creacion",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pelicula/s encontradas",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Pelicula no encontrada"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "movies"
        ],
        "summary": "Creacion de peliculas/series",
        "description": "Con este endpoint podes crear peliculas/series para agregar a la Base de Datos",
        "operationId": "createMovies",
        "requestBody": {
          "description": "Ingrese todos los necesario para crear la pelicula/serie",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeliculaSerie"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PeliculaSerie"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PeliculaSerie"
              }
            },
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeliculaSerie"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PeliculaSerie"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Ingreso de datos incorrecto"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "movies"
        ],
        "summary": "Actualizar Pelicula/Serie",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateMovie",
        "requestBody": {
          "description": "Update an existent user in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PeliculaSerie"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PeliculaSerie"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/PeliculaSerie"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "movies"
        ],
        "summary": "Borrar Pelicula/Serie",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteMovie",
        "responses": {
          "200": {
            "description": "Pelicula/Serie borrado"
          },
          "400": {
            "description": "Id invalido"
          },
          "404": {
            "description": "Pelicula/Serie no encontrada"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/movies/{id}": {
      "get": {
        "tags": [
          "movies"
        ],
        "summary": "Busqueda por ID",
        "description": "",
        "operationId": "getMovieById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id necesario para buscar la pelicula/serie ",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pelicula/Serie encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PeliculaSerie"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/PeliculaSerie"
                }
              }
            }
          },
          "400": {
            "description": "Id invalido"
          },
          "404": {
            "description": "Pelicula/Serie no encontrada"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    },
    "schemas": {
      "Token": {
        "type": "string",
        "xml": {
          "name": "Token"
        }
      },
      "PeliculaSerie": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Imagen": {
            "type": "string"
          },
          "Titulo": {
            "type": "string"
          },
          "FechaCreacion": {
            "type": "string",
            "format": "date-time"
          },
          "Calificacion": {
            "type": "number",
            "format": "float"
          }
        },
        "xml": {
          "name": "PeliculaSerie"
        }
      },
      "Personaje": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer",
            "format": "int64"
          },
          "Imagen": {
            "type": "string"
          },
          "Nombre": {
            "type": "string"
          },
          "Edad": {
            "type": "integer",
            "format": "int64"
          },
          "Peso": {
            "type": "integer",
            "format": "int64"
          },
          "Historia": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Personaje"
        }
      },
      "PersonajeXPelicula": {
        "type": "object",
        "properties": {
          "IdPersonaje": {
            "type": "integer",
            "format": "int64"
          },
          "IdPeliculaSerie": {
            "type": "integer",
            "format": "int64"
          }
        },
        "xml": {
          "name": "PersonajeXPelicula"
        }
      }
    },
    "requestBodies": {
      "Token": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Token"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Token"
            }
          }
        }
      },
      "Personaje": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Personaje"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Personaje"
            }
          }
        }
      },
      "PeliculaSerie": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PeliculaSerie"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/PeliculaSerie"
            }
          }
        }
      },
      "PersonajeXPelicula": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/PersonajeXPelicula"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/PersonajeXPelicula"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Personaje"
              }
            }
          }
        }
      }
    }
  }
}